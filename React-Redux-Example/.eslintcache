[{"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\index.js":"1","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\reportWebVitals.js":"2","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\App.js":"3","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\configureStore.js":"4","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\components\\bugs.js":"5","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\reducer.js":"6","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\middleware\\api.js":"7","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\middleware\\toastify.js":"8","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\middleware\\logger.js":"9","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\entities.js":"10","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\api.js":"11","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\bugs.js":"12","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\projects.js":"13","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\users.js":"14","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\components\\bugsList.js":"15"},{"size":500,"mtime":1611202535033,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1611202535033,"results":"18","hashOfConfig":"17"},{"size":278,"mtime":1612658431853,"results":"19","hashOfConfig":"17"},{"size":491,"mtime":1612653803046,"results":"20","hashOfConfig":"17"},{"size":963,"mtime":1612658547722,"results":"21","hashOfConfig":"17"},{"size":150,"mtime":1612554468000,"results":"22","hashOfConfig":"17"},{"size":772,"mtime":1612554468000,"results":"23","hashOfConfig":"17"},{"size":177,"mtime":1612554468000,"results":"24","hashOfConfig":"17"},{"size":205,"mtime":1612554468000,"results":"25","hashOfConfig":"17"},{"size":275,"mtime":1612554468000,"results":"26","hashOfConfig":"17"},{"size":233,"mtime":1612554468000,"results":"27","hashOfConfig":"17"},{"size":2553,"mtime":1612569132000,"results":"28","hashOfConfig":"17"},{"size":373,"mtime":1612554468000,"results":"29","hashOfConfig":"17"},{"size":358,"mtime":1612554468000,"results":"30","hashOfConfig":"17"},{"size":589,"mtime":1612658024404,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15b3087",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\index.js",[],"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\reportWebVitals.js",[],"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\App.js",[],"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\configureStore.js",[],["64","65"],"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\components\\bugs.js",[],"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\reducer.js",[],"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\middleware\\api.js",[],"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\middleware\\toastify.js",[],"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\middleware\\logger.js",[],"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\entities.js",[],"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\api.js",[],"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\bugs.js",["66"],"import { createSlice } from '@reduxjs/toolkit';\nimport moment from 'moment';\nimport { createSelector } from 'reselect';\nimport { apiCallBegan } from './api';\n\nconst slice = createSlice({\n  name: 'bugs',\n  initialState: {\n    list: [],\n    loading: false,\n    lastFetch: null,\n  },\n  reducers: {\n    bugsRequested: (bugs, action) => {\n      bugs.loading = true;\n    },\n    bugsReceived: (bugs, action) => {\n      bugs.list = action.payload;\n      bugs.loading = false;\n      bugs.lastFetch = Date.now();\n    },\n    bugsRequestFailed: (bugs, action) => {\n      bugs.loading = false;\n    },\n    bugAssignedToUser: (bugs, action) => {\n      const { id: bugId, userId } = action.payload;\n      const index = bugs.list.findIndex((bug) => bug.id === bugId);\n      bugs.list[index].userId = userId;\n    },\n    bugAdded: (bugs, action) => {\n      bugs.list.push(action.payload);\n    },\n    bugResolved: (bugs, action) => {\n      const index = bugs.list.findIndex((bug) => bug.id === action.payload.id);\n      bugs.list[index].resolved = true;\n    },\n    bugRemoved: (bugs, action) => {\n      return bugs.list.filter((bug) => bug.id !== action.payload.id);\n    },\n  },\n});\n\nconst {\n  bugsReceived,\n  bugAssignedToUser,\n  bugAdded,\n  bugResolved,\n  bugRemoved,\n  bugsRequested,\n  bugsRequestFailed,\n} = slice.actions;\nexport default slice.reducer;\n\n// Action Creators\nconst url = '/bugs';\n\nexport const loadBugs = () => (dispatch, getState) => {\n  const { lastFetch } = getState().entities.bugs;\n\n  const diffInMinutes = moment().diff(moment(lastFetch), 'minutes');\n  if (diffInMinutes < 10) return;\n\n  dispatch(\n    apiCallBegan({\n      url,\n      onStart: bugsRequested.type,\n      onSuccess: bugsReceived.type,\n      onError: bugsRequestFailed.type,\n    })\n  );\n};\n\nexport const addBug = (bug) =>\n  apiCallBegan({\n    url,\n    method: 'post',\n    data: bug,\n    onSuccess: bugAdded.type,\n  });\n\nexport const resolveBug = (id) =>\n  apiCallBegan({\n    url: `${url}/${id}`,\n    method: 'patch',\n    data: { resolved: true },\n    onSuccess: bugResolved.type,\n  });\n\nexport const assignBugToUser = (bugId, userId) =>\n  apiCallBegan({\n    url: `${url}/${bugId}`,\n    method: 'patch',\n    data: { userId },\n    onSuccess: bugAssignedToUser.type,\n  });\n\n// Selector\nexport const getUnresolvedBugs = createSelector(\n  (state) => state.entities.bugs.list,\n  (list) => list.filter((bug) => !bug.resolved)\n);\n\nexport const getBugsbyUser = (userId) =>\n  createSelector(\n    (state) => state.entities.bugs.list,\n    (bugs) => bugs.filter((bug) => bug.userId === userId)\n  );\n","F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\projects.js",[],"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\store\\users.js",[],"F:\\Gateway\\Reactjs\\React-Redux-Example\\src\\components\\bugsList.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":48,"column":3,"nodeType":"73","messageId":"74","endLine":48,"endColumn":13},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'bugRemoved' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]